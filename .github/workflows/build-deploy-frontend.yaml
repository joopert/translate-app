name: push backend

on:
  workflow_dispatch:
  push:
    branches:
      - "feat-**"
      - "main"
    paths:
      - "frontend/**"

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    # Set environment-specific variables based on the branch
    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
      AWS_ACCOUNT_ID: ${{ github.ref == 'refs/heads/main' && 'dummy' || '018276530810' }}
      S3_BUCKET_PREFIX: ${{ github.ref == 'refs/heads/main' && 'amfyapp-prod-static' || 'amfyapp-dev-static' }}
      REGISTRY: ${{ github.ref == 'refs/heads/main' && 'dummy.dkr.ecr.eu-west-1.amazonaws.com' || '018276530810.dkr.ecr.eu-west-1.amazonaws.com' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build nuxt
        run: |
          ENVIRONMENT=${{ env.ENVIRONMENT }} npx nuxt build
          mv .output output

      - name: install-aws-cli-action
        uses: unfor19/install-aws-cli-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/githubActionsRole
          aws-region: eu-west-1

      - name: Determine current color
        run: |
          CURRENT_COLOR=$(aws ssm get-parameter --name "current-blue-green-deployment" --query "Parameter.Value" --output text)
          echo "Current color is $CURRENT_COLOR"
          if [ "$CURRENT_COLOR" = "blue" ]; then
            echo "NEW_COLOR=green" >> $GITHUB_ENV
          else
            echo "NEW_COLOR=blue" >> $GITHUB_ENV
          fi

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: "${{ env.AWS_ACCOUNT_ID }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          provenance: false # makes sure you only get arm build in ECR.

      - name: Sync to S3
        run: |
          aws s3 sync output/public s3://${{ env.S3_BUCKET_PREFIX }}-${{ env.NEW_COLOR }}-8ad5e5e6 --delete --cache-control max-age=31536000

      - name: Update ecs service - force new deployment
        run: aws ecs update-service --service frontend --cluster app-ecs-cluster --force-new-deployment

      - name: Update deployment color
        run: |
          aws ssm put-parameter --name "current-blue-green-deployment" --type "String" --value "${{ env.NEW_COLOR }}" --overwrite

      - name: Update lambda image optimization
        run: |
          aws lambda update-function-configuration --function-name image-optimization --environment "{\"Variables\": $(aws lambda get-function-configuration --function-name image-optimization --query 'Environment.Variables' --output json | jq '.originalImageBucketName = "amfyapp-${{ env.ENVIRONMENT }}-static-${{ env.NEW_COLOR }}-8ad5e5e6"')}"
